/*
 * Copyright (c) 2023 Andrei Gaevskii
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    quick_tap_ms = <200>;
    tapping-term-ms = <140>;
};

&mt {
    quick_tap_ms = <15>;
    tapping-term-ms = <150>;
};

/ {
    combos {
        compatible = "zmk,combos";

        firefox {
            bindings = <&kp LS(LA(LC(NUMBER_1)))>;
            key-positions = <15 16 17>;
        };

        delete {
            bindings = <&kp DEL>;
            key-positions = <4 17>;
        };

        minusexcel {
            bindings = <&kp LC(MINUS)>;
            key-positions = <1 2>;
        };

        minusgoogkle {
            bindings = <&MinusG>;
            key-positions = <0 1>;
        };

        space {
            bindings = <&kp SPACE>;
            key-positions = <3 5>;
        };

        UPUI {
            bindings = <&kp PAGE_UP>;
            key-positions = <2 3 4>;
        };

        DOWNj {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <14 15 16>;
        };

        DelWord {
            bindings = <&kp LC(BACKSPACE)>;
            key-positions = <6 7 8>;
        };

        BS {
            bindings = <&kp BACKSPACE>;
            key-positions = <15 17>;
        };
    };

    behaviors {
        dot: dot {
            compatible = "zmk,behavior-tap-dance";
            label = "DOT";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp LS(SLASH)>, <&kp COMMA>;

            tapping-term-ms = <250>;
        };
    };

    macros {
        langswtich2: langswtich2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp LEFT_SHIFT>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "LANGSWTICH2";
        };

        MinusG: MinusG {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT>,
                <&macro_press>,
                <&kp RCTRL>,
                <&macro_tap>,
                <&kp MINUS>,
                <&macro_release>,
                <&kp RIGHT_ALT &kp RCTRL &kp MINUS>;

            label = "MINUSG";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &mt LEFT_WIN RIGHT_BRACKET  &kp Q  &kp W       &kp E      &kp R           &kp T        &kp Y        &kp U          &kp I      &kp O          &kp P      &kp LBKT
  &kp LCTRL                   &kp A  &kp S       &kp D      &kp F           &kp G        &kp H        &kp J          &kp K      &kp L          &kp SEMI   &mt SQT RCTRL
  &kp LALT                    &kp Z  &kp X       &kp C      &kp V           &kp B        &kp N        &kp M          &kp COMMA  &kp DOT        &kp SLASH  &mt MINUS RIGHT_ALT
                                     &kp ESCAPE  &lt 2 TAB  &kp LEFT_SHIFT  &lt 1 RET    &lt 1 SPACE  &kp BACKSPACE  &lt 2 DEL  &kp BACKSLASH
            >;
        };

        lower_layer {
            bindings = <
  &mt LEFT_WIN F1     &kp F2           &kp F3        &kp F4        &kp F5          &kp F6          &kp F7        &kp F8                     &kp F9        &kp F10        &kp F11       &mt F12 RIGHT_WIN
  &mt LCTRL PLUS      &kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR      &kp PERCENT     &kp CARET     &kp AMPS                   &kp STAR      &kp LPAR       &kp RPAR      &kp MINUS
  &mt LEFT_ALT EQUAL  &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4    &kp NUMBER_5    &kp NUMBER_6  &kp NUMBER_7               &kp NUMBER_8  &kp NUMBER_9   &kp NUMBER_0  &mt RIGHT_ALT UNDERSCORE
                                       &kp ESCAPE    &lt 3 TAB     &kp LEFT_SHIFT  &trans          &kp SPACE     &mt RIGHT_SHIFT BACKSPACE  &lt 3 DEL     &kp BACKSLASH
            >;
        };

        raise_layer {
            bindings = <
  &kp LEFT_WIN        &kp LC(LA(MINUS))  &kp LC(MINUS)           &kp LS(LC(UP_ARROW))    &kp BACKSPACE            &kp DELETE    &kp C_VOL_UP  &kp HOME                   &kp PSCRN     &kp PG_UP      &kp SLCK             &mt RWIN CAPSLOCK
  &kp LCTRL           &kp KP_SLASH       &kp LS(LC(LEFT_ARROW))  &kp LS(LC(DOWN_ARROW))  &kp LS(LC(RIGHT_ARROW))  &kp MINUS     &kp C_MUTE    &kp LEFT                   &kp UP        &kp RIGHT      &kp INS              &kp LCTRL
  &mt LEFT_ALT EQUAL  &kp N0             &kp NUMBER_1            &kp NUMBER_2            &kp NUMBER_3             &dot          &kp C_VOL_DN  &kp END                    &kp DOWN      &kp PG_DN      &kp C_AL_CALCULATOR  &kp RIGHT_ALT
                                         &trans                  &trans                  &kp LEFT_SHIFT           &lt 3 RET     &kp SPACE     &mt RIGHT_SHIFT BACKSPACE  &lt 3 DELETE  &kp BACKSLASH
            >;
        };

        adjust_layer {
            bindings = <
  &bootloader  &none         &none         &none         &none         &none           &none             &none         &none         &none         &none         &bootloader
  &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4      &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
  &sys_reset   &none         &none         &none         &none         &none           &kp C_SLEEP_MODE  &kp B         &none         &none         &none         &sys_reset
                             &none         &caps_word    &none         &trans          &trans            &none         &trans        &none
            >;
        };
    };
};
